"""Initial migration

Revision ID: acd7ebce9fc1
Revises: 
Create Date: 2025-04-16 22:28:10.282534

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'acd7ebce9fc1'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('datasource_access',
    sa.Column('access_id', sa.UUID(), nullable=False),
    sa.Column('datasource_id', sa.UUID(), nullable=True),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('team_id', sa.String(), nullable=True),
    sa.Column('org_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('access_id')
    )
    op.create_table('team_roles',
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('role_slug', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('role_id'),
    sa.UniqueConstraint('role_slug')
    )
    op.create_table('teams',
    sa.Column('team_id', sa.UUID(), nullable=False),
    sa.Column('org_id', sa.String(), nullable=False),
    sa.Column('team_slug', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_by', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('team_id')
    )
    op.create_index(op.f('ix_teams_org_id'), 'teams', ['org_id'], unique=False)
    op.create_index(op.f('ix_teams_team_slug'), 'teams', ['team_slug'], unique=True)
    op.create_table('team_memberships',
    sa.Column('team_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('role_id', sa.UUID(), nullable=True),
    sa.Column('membership_slug', sa.String(), nullable=True),
    sa.Column('removed_at', sa.BigInteger(), nullable=True),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['team_roles.role_id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['teams.team_id'], ),
    sa.PrimaryKeyConstraint('team_id', 'user_id'),
    sa.UniqueConstraint('membership_slug')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('team_memberships')
    op.drop_index(op.f('ix_teams_team_slug'), table_name='teams')
    op.drop_index(op.f('ix_teams_org_id'), table_name='teams')
    op.drop_table('teams')
    op.drop_table('team_roles')
    op.drop_table('datasource_access')
    # ### end Alembic commands ###
